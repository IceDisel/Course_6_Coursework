# Generated by Django 5.0.6 on 2024-05-14 09:14

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mailing', '0002_client_owner'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=150, verbose_name='тема письма')),
                ('content', models.TextField(verbose_name='тело письма')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='владелец')),
            ],
            options={
                'verbose_name': 'письмо',
                'verbose_name_plural': 'письма',
            },
        ),
        migrations.CreateModel(
            name='MailingSrv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='время начала рассылки')),
                ('next', models.DateTimeField(default=django.utils.timezone.now, verbose_name='время следующей рассылки')),
                ('finish', models.DateTimeField(verbose_name='время завершения рассылки')),
                ('status', models.CharField(choices=[('создана', 'создана'), ('запущена', 'запущена'), ('завершена', 'завершена')], default=('создана', 'создана'), max_length=100, verbose_name='статус рассылки')),
                ('frequency', models.CharField(choices=[('единоразово', 'единоразово'), ('раз в день', 'раз в день'), ('раз в неделю', 'раз в неделю'), ('раз в месяц', 'раз в месяц')], max_length=50, verbose_name='периодичность рассылки')),
                ('is_activated', models.BooleanField(default=True, verbose_name='метка активности')),
                ('mail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mailing.mail', verbose_name='письмо')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='владелец')),
                ('recipients', models.ManyToManyField(to='mailing.client', verbose_name='получатели рассылки')),
            ],
            options={
                'verbose_name': 'параметр рассылки',
                'verbose_name_plural': 'параметры рассылок',
                'ordering': ('pk',),
                'permissions': [('set_is_activated', 'переключатель метки активности')],
            },
        ),
        migrations.AddField(
            model_name='mail',
            name='mailings',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mails', to='mailing.mailingsrv', verbose_name='рассылки'),
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_time', models.DateTimeField(auto_now=True, verbose_name='время последней попытки')),
                ('status', models.CharField(default='попытка не инициирована', max_length=50, verbose_name='статус попытки')),
                ('server_response', models.TextField(blank=True, null=True, verbose_name='ответ почтового сервера')),
                ('mailing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mailing.mailingsrv', verbose_name='рассылка')),
            ],
            options={
                'verbose_name': 'отчет',
                'verbose_name_plural': 'отчеты',
                'ordering': ('mailing',),
            },
        ),
    ]
